{"version":3,"sources":["store/reducer.js","context.js","helpers/useInterval.js","components/Snackbar.js","components/Header.js","components/PlayPauseIcons.js","helpers/styles.js","components/Select.js","components/Dialogue.js","components/Chart.js","components/Menu.js","components/MessageButtons.js","helpers/helpers.js","components/Message.js","components/EditMessage.js","components/Messages.js","App.js","index.js","components/Menu.module.scss","components/Message.module.scss","components/PlayPauseIcons.module.scss","components/Select.module.scss","components/Dialogue.module.scss","store/generator.js","components/Header.module.scss","components/Messages.module.scss","components/EditMessage.module.scss","store/levels.js"],"names":["reducer","state","action","newState","type","payload","map","msg","id","message","text","level","confirm","filter","edit","DashboardContext","createContext","useDashboard","useContext","DashboardProvider","children","useState","isRunning","setIsRunning","messages","setMessages","useReducer","dispatch","snackbar","setSnackbar","select","setSelect","msgsInView","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","newMsg","randomGenerator","newMsgs","value","Provider","SimpleSnackbar","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","open","Boolean","autoHideDuration","onClose","severity","IconButton","size","aria-label","color","onClick","fontSize","Header","className","style","main","PlayPauseIcons","icon","playIcon","pauseIcon","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","borderColor","fill","selectEmpty","marginTop","root","width","SelectMenu","options","inEditView","prevLevel","it","setIt","classes","FormControl","variant","InputLabel","underline","Select","labelId","onChange","target","label","key","MenuItem","Dialogue","inMenu","setShowDeleteConfirmation","deleteMessage","setDeleteMessage","Button","autoFocus","closeDialogue","marginRight","deleteSelected","background","Chart","warn","error","status","wPercent","length","ePercent","sPercent","maxHeight","data","title","Menu","plural","setPlural","showDeleteConfirmation","left","e","startIcon","right","MessageButtons","editMode","setNewMsg","buttons","firstButtonClicked","secondButtonClicked","pickAvatarColor","getAvatar","charAt","toUpperCase","getReadableTime","timestamp","moment","format","Message","Chip","avatar","Avatar","EditMessage","setText","editMessage","onSubmit","name","cols","rows","defaultValue","val","Messages","App","ReactDOM","render","document","getElementById","module","exports","chance","require","uuid","v4","levels","Math","floor","random","sentence","words","Date","now","toUTCString"],"mappings":"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","file":"static/js/main.a0e474f2.chunk.js","sourcesContent":["export function reducer(state, action) {\n  let newState;\n  switch (action.type) {\n    case 'add-new-message':\n      newState = [...state, action.payload];\n      return newState;\n    case 'delete-all':\n      newState = [];\n      return newState;\n    case 'change-text':\n      newState = state.map((msg) =>\n        action.payload.id === msg.id\n          ? { ...msg, message: action.payload.text }\n          : msg\n      );\n      return newState;\n    case 'change-level':\n      newState = state.map((msg) =>\n        action.payload.id === msg.id\n          ? {\n              ...msg,\n              level: action.payload.level,\n            }\n          : msg\n      );\n      return newState;\n    case 'toggle-delete-confirmation':\n      newState = state.map((msg) =>\n        action.payload === msg.id\n          ? {\n              ...msg,\n              confirm: !msg.confirm,\n            }\n          : msg\n      );\n      return newState;\n    case 'delete-message':\n      newState = state.filter((msg) => msg.id !== action.payload);\n      return newState;\n    case 'toggle-edit':\n      newState = state.map((msg) =>\n        action.payload === msg.id\n          ? { ...msg, edit: !msg.edit }\n          : { ...msg, edit: false }\n      );\n      return newState;\n    default:\n      return newState;\n  }\n}\n","import React, { useContext, useState, createContext, useReducer } from 'react';\nimport { useInterval } from './helpers/useInterval';\nimport { randomGenerator } from './store/generator';\nimport { reducer } from './store/reducer';\nconst DashboardContext = createContext();\n\nexport function useDashboard() {\n  return useContext(DashboardContext);\n}\n\nexport function DashboardProvider({ children }) {\n  const [isRunning, setIsRunning] = useState(true);\n  let [messages, setMessages] = useState([]);\n  let [state, dispatch] = useReducer(reducer, messages);\n  const [snackbar, setSnackbar] = useState('');\n  const [select, setSelect] = useState('view all');\n\n  let msgsInView = state;\n  if (select !== 'view all') {\n    msgsInView = state.filter((message) => message.level === select);\n  }\n  if (select === 'view all') {\n    msgsInView = state;\n  }\n\n  useInterval(\n    () => {\n      const newMsg = randomGenerator();\n      const newMsgs = [...messages, { ...newMsg, edit: false, confirm: false }];\n      setMessages(newMsgs);\n    },\n    isRunning ? 2000 : null\n  );\n\n  const value = {\n    messages,\n    isRunning,\n    setIsRunning,\n    snackbar,\n    setSnackbar,\n    select,\n    setSelect,\n    state,\n    dispatch,\n    msgsInView,\n  };\n\n  return (\n    <DashboardContext.Provider value={value}>\n      {children}\n    </DashboardContext.Provider>\n  );\n}\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useDashboard } from '../context';\n\nexport default function SimpleSnackbar() {\n  const { setSnackbar, snackbar } = useDashboard();\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackbar(false);\n  }\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        open={Boolean(snackbar)}\n        autoHideDuration={4000}\n        onClose={handleClose}\n        message={snackbar}\n        severity='success'\n        action={\n          <IconButton\n            size='small'\n            aria-label='close'\n            color='inherit'\n            onClick={handleClose}\n          >\n            <CloseIcon fontSize='small' />\n          </IconButton>\n        }\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport style from './Header.module.scss';\n\nfunction Header() {\n  return (\n    <div className={style.main}>\n      <h1>Messages Dashboard 💬</h1>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { FaPlay, FaPauseCircle } from 'react-icons/fa';\nimport { useDashboard } from '../context';\nimport style from './PlayPauseIcons.module.scss';\n\nfunction PlayPauseIcons() {\n  const { setIsRunning, isRunning } = useDashboard();\n  return (\n    <div className={style.icon}>\n      {isRunning ? (\n        <FaPlay\n          className={style.playIcon}\n          onClick={() => setIsRunning(!isRunning)}\n        />\n      ) : (\n        <FaPauseCircle\n          className={style.pauseIcon}\n          onClick={() => setIsRunning(!isRunning)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default PlayPauseIcons;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  select: {\n    '&:before': {\n      borderColor: 'red',\n    },\n    '&:after': {\n      borderColor: 'red',\n    },\n  },\n  icon: {\n    fill: 'red',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  root: {\n    width: 200,\n    \"& .MuiOutlinedInput-input\": {\n      color: \"green\"\n    },\n    \"& .MuiInputLabel-root\": {\n      color: \"green\"\n    },\n    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"green\"\n    },\n    \"&:hover .MuiOutlinedInput-input\": {\n      color: \"red\"\n    },\n    \"&:hover .MuiInputLabel-root\": {\n      color: \"red\"\n    },\n    \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"red\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-input\": {\n      color: \"purple\"\n    },\n    \"& .MuiInputLabel-root.Mui-focused\": {\n      color: \"purple\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"purple\"\n    }\n  }\n}));\n","import React, { useState } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport style from './Select.module.scss';\nimport { useDashboard } from '../context';\nimport { useStyles } from '../helpers/styles';\n\nfunction SelectMenu({ inEditView, id, prevLevel }) {\n  const { setSnackbar, setSelect, dispatch } = useDashboard();\n  const [it, setIt] = useState('');\n  let options;\n  const levelsAll = ['view all', 'warn', 'error', 'status'];\n  const levels = ['warn', 'error', 'status'];\n  const classes = useStyles();\n\n  if (inEditView) {\n    options = levels;\n  }\n  if (!inEditView) {\n    options = levelsAll;\n  }\n\n  function handleChange(event) {\n    let level = event.target.value;\n    setIt(level);\n    setSnackbar(`Successfully changed level to ${level}`);\n    setSelect(level);\n    dispatch({ type: 'change-level', payload: { id: id, level: level } });\n  }\n\n  return (\n    <FormControl variant='outlined' className={classes.formControl}>\n      <InputLabel\n        id='demo-simple-select-outlined-label'\n        // className={style.label}\n        className={classes.root}\n        classes={{\n          underline: style.underline,\n        }}\n        style={{ color: '#E0E0E0' }}\n      >\n        Levels\n      </InputLabel>\n      <Select\n        labelId='demo-simple-select-outlined-label'\n        id='demo-simple-select-outlined'\n        style={{ color: '#E0E0E0' }}\n        value={it}\n        onChange={handleChange}\n        label='Levels'\n        className={style.label}\n      >\n        {options.map(\n          (level, key) =>\n            level !== prevLevel && (\n              <MenuItem key={key} value={level}>\n                {level}\n              </MenuItem>\n            )\n        )}\n      </Select>\n    </FormControl>\n  );\n}\n\nexport default SelectMenu;\n","import React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport style from './Dialogue.module.scss';\nimport { useDashboard } from '../context';\n\nfunction Dialogue({ id, inMenu, setShowDeleteConfirmation }) {\n  const { setSnackbar, setIsRunning, isRunning, dispatch } = useDashboard();\n  const [deleteMessage, setDeleteMessage] = useState('');\n\n  useEffect(() => {\n    if (inMenu) {\n      let msg = 'Are you sure you want to delete all? This cannot be undone.';\n      setDeleteMessage(msg);\n    }\n    if (!inMenu) {\n      let msg = 'Are you sure you want to delete this message?';\n      setDeleteMessage(msg);\n    }\n  }, [inMenu]);\n\n  function closeDialogue(id) {\n    if (inMenu) {\n      setShowDeleteConfirmation(false);\n    }\n    if (!inMenu) {\n      dispatch({ type: 'toggle-delete-confirmation', payload: id });\n      setIsRunning(!isRunning);\n    }\n  }\n\n  function deleteSelected(id) {\n    if (inMenu) {\n      dispatch({ type: 'delete-all' });\n      setSnackbar('Successfully deleted all');\n      setShowDeleteConfirmation(false);\n    }\n    if (!inMenu) {\n      dispatch({ type: 'delete-message', payload: id });\n      setIsRunning(!isRunning);\n      setSnackbar('Successfully deleted message');\n      setIsRunning(true);\n    }\n  }\n\n  return (\n    <div className={inMenu ? style.inMenu : style.main}>\n      <h5 id='confirmation-dialog-title'>{deleteMessage}</h5>\n      <div>\n        <Button\n          autoFocus\n          onClick={() => closeDialogue(id)}\n          variant='contained'\n          style={{ marginRight: '1rem' }}\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={() => deleteSelected(id)}\n          color='primary'\n          variant='contained'\n          style={{ background: '#AA647B' }}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Dialogue;\n","import React from 'react';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport { useDashboard } from '../context';\n\nfunction Chart() {\n  const { state } = useDashboard();\n  const warn = state.filter((msg) => msg.level === 'warn');\n  const error = state.filter((msg) => msg.level === 'error');\n  const status = state.filter((msg) => msg.level === 'status');\n  const wPercent = warn.length / state.length || 0;\n  const ePercent = error.length / state.length || 0;\n  const sPercent = status.length / state.length || 0;\n\n  return (\n    <PieChart\n      style={{ maxHeight: '10rem' }}\n      data={[\n        { title: 'warn', value: wPercent, color: '#3f51b5' },\n        { title: 'error', value: ePercent, color: '#f50057' },\n        { title: 'status', value: sPercent, color: '#e0e0e0' },\n      ]}\n    />\n  );\n}\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport style from './Menu.module.scss';\nimport Button from '@material-ui/core/Button';\nimport PlayPauseIcons from './PlayPauseIcons';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Select from './Select';\nimport Dialogue from './Dialogue';\nimport { useDashboard } from '../context';\nimport Chart from './Chart';\n\nfunction Menu() {\n  const {\n    setIsRunning,\n    isRunning,\n    state,\n    setSnackbar,\n    select,\n    msgsInView,\n  } = useDashboard();\n  const [plural, setPlural] = useState('messages');\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n\n  useEffect(() => {\n    if (state.length === 1) {\n      setPlural('message');\n    }\n    if (state.length !== 1) {\n      setPlural('messages');\n    }\n  }, [state]);\n\n  function toggleIsRunning() {\n    setIsRunning(!isRunning);\n    let message = isRunning ? 'Paused' : 'Started';\n    setSnackbar(message);\n  }\n  \n  return (\n    <div className={style.main}>\n      <div className={style.left}>\n        {showDeleteConfirmation && (\n          <Dialogue\n            inMenu={true}\n            setShowDeleteConfirmation={setShowDeleteConfirmation}\n          />\n        )}\n        <div className={style.status}>\n          <h2>Status: {isRunning ? 'Running' : 'Paused'}</h2>\n          <PlayPauseIcons />\n        </div>\n        <Button\n          onClick={(e) => toggleIsRunning()}\n          variant='contained'\n          style={{ marginRight: '1rem' }}\n        >\n          {isRunning ? 'Pause' : 'Start'}\n        </Button>\n        <Button\n          onClick={(e) => setShowDeleteConfirmation(true)}\n          variant='contained'\n          startIcon={<DeleteIcon />}\n          style={{ background: '#AA647B' }}\n        >\n          Delete all\n        </Button>\n        <br />\n        <p>Show only:</p>\n        <Select />\n      </div>\n      <div className={style.right}>\n        <Chart />\n        <p>\n          Displaying {msgsInView.length}{' '}\n          {select !== 'view all' && `of ${state.length} total`} {plural}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Menu;\n","import React from 'react';\nimport Dialogue from './Dialogue';\nimport style from './Message.module.scss';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useDashboard } from '../context';\n\nfunction MessageButtons({ id, confirm, editMode, setNewMsg }) {\n  const { setIsRunning, isRunning, dispatch, setSnackbar } = useDashboard();\n\n  function firstButtonClicked(id) {\n    dispatch({ type: 'toggle-edit', payload: id });\n    if (!editMode) {\n      setIsRunning(false);\n    }\n    if (editMode) {\n      setIsRunning(true);\n    }\n  }\n\n  function secondButtonClicked(id) {\n    if (!editMode) {\n      setIsRunning(!isRunning);\n      dispatch({ type: 'toggle-delete-confirmation', payload: id });\n    }\n    if (editMode) {\n      setNewMsg();\n      setSnackbar('Successfully edited message');\n    }\n  }\n\n  return (\n    <div className={style.buttons}>\n      {confirm && <Dialogue id={id} />}\n      <Button\n        onClick={(e) => firstButtonClicked(id)}\n        variant='contained'\n        color={editMode ? 'default' : 'primary'}\n        style={{ marginRight: '1rem' }}\n      >\n        {editMode ? 'Cancel' : 'Edit'}\n      </Button>\n      <Button\n        onClick={(e) => secondButtonClicked(id)}\n        variant='contained'\n        color={editMode ? 'primary' : 'secondary'}\n        startIcon={!editMode && <DeleteIcon />}\n      >\n        {editMode ? 'Accept' : 'Delete'}\n      </Button>\n    </div>\n  );\n}\n\nexport default MessageButtons;\n","import moment from 'moment-timezone';\n\nexport function pickAvatarColor(level) {\n  if (level === 'error') return 'secondary';\n  if (level === 'warn') return 'primary';\n  if (level === 'status') return 'default';\n}\n\nexport function getAvatar(level) {\n  return level.charAt(0).toUpperCase();\n}\n\nexport function getReadableTime(timestamp) {\n  return moment(timestamp).format('llll');\n}\n","import React from 'react';\nimport style from './Message.module.scss';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport MessageButtons from './MessageButtons';\nimport {\n  pickAvatarColor,\n  getAvatar,\n  getReadableTime,\n} from '../helpers/helpers';\n\nfunction Message({ msg }) {\n  let { timestamp, level, id, message, confirm } = msg;\n\n  return (\n    <div className={style.message} id={id}>\n      <p>\n        <small>{getReadableTime(timestamp)}</small>\n      </p>\n      <Chip\n        color={pickAvatarColor(level)}\n        label={level}\n        avatar={<Avatar>{getAvatar(level)}</Avatar>}\n      />\n      <h4>{message}</h4>\n      <MessageButtons confirm={confirm} id={id} />\n    </div>\n  );\n}\n\nexport default Message;\n","import React, { useState } from 'react';\nimport style from './EditMessage.module.scss';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport MessageButtons from './MessageButtons';\nimport Select from './Select';\nimport {\n  pickAvatarColor,\n  getAvatar,\n  getReadableTime,\n} from '../helpers/helpers';\nimport { useDashboard } from '../context';\n\nfunction EditMessage({ msg }) {\n  let { timestamp, level, id, message, confirm } = msg;\n  const [text, setText] = useState(message);\n  const { setIsRunning, dispatch } = useDashboard();\n\n  function submit() {\n    setNewMsg();\n  }\n\n  function changeText(val) {\n    setText(val);\n    dispatch({ type: 'change-text', payload: { id: id, text: val } });\n  }\n\n  function setNewMsg() {\n    dispatch({ type: 'toggle-edit', payload: id });\n    setIsRunning(true);\n  }\n\n  return (\n    <form className={style.editMessage} id={id} onSubmit={submit}>\n      <h3>Edit details:</h3>\n      <p>\n        <small>Created: {getReadableTime(timestamp)}</small>\n      </p>\n      <Chip\n        color={pickAvatarColor(level)}\n        label={level}\n        avatar={<Avatar>{getAvatar(level)}</Avatar>}\n      />\n      <br />\n      <h4>Edit level:</h4>\n      <Select inEditView={true} id={id} prevLevel={level} />\n      <br />\n      <h4>Edit message:</h4>\n      <br />\n      <textarea\n        name=''\n        id=''\n        cols='100'\n        rows='3'\n        defaultValue={text}\n        onChange={(e) => changeText(e.target.value)}\n      ></textarea>\n      <MessageButtons\n        confirm={confirm}\n        id={id}\n        editMode={true}\n        setNewMsg={setNewMsg}\n      />\n    </form>\n  );\n}\n\nexport default EditMessage;\n","import React, { useEffect } from 'react';\nimport Message from './Message';\nimport style from './Messages.module.scss';\nimport EditMessage from './EditMessage';\nimport { useDashboard } from '../context';\n\nfunction Messages() {\n  const { dispatch, messages, msgsInView } = useDashboard();\n\n  useEffect(() => {\n    if (messages.length > 0) {\n      dispatch({\n        type: 'add-new-message',\n        payload: messages[messages.length - 1],\n      });\n    }\n  }, [messages, dispatch]);\n\n  return (\n    <div className={style.main}>\n      {msgsInView.map((msg, key) => (\n        <div key={key}>\n          {msg.edit ? <EditMessage msg={msg} /> : <Message msg={msg} />}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Messages;\n","import Snackbar from './components/Snackbar';\nimport Header from './components/Header';\nimport Menu from './components/Menu';\nimport Messages from './components/Messages';\nimport { DashboardProvider } from './context';\n\nfunction App() {\n  return (\n    <DashboardProvider>\n      <Snackbar />\n      <Header />\n      <Menu />\n      <Messages />\n    </DashboardProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Menu_main__177jF\",\"left\":\"Menu_left__1CrpW\",\"right\":\"Menu_right__3FC5U\",\"status\":\"Menu_status__2XvGq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__AKUS1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"PlayPauseIcons_icon__39ZT2\",\"playIcon\":\"PlayPauseIcons_playIcon__1NAXZ\",\"pauseIcon\":\"PlayPauseIcons_pauseIcon__2AEyd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Select_label__1bIW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Dialogue_main__275iq\",\"inMenu\":\"Dialogue_inMenu__28Mqo\"};","const chance = require('chance');\nconst uuid = require('uuid').v4;\nconst { levels } = require('./levels');\n\nconst randomLevel = () => {\n  return levels[Math.floor(Math.random() * 3)];\n};\n\nconst randomGenerator = () => {\n  return {\n    level: randomLevel(),\n    message: chance().sentence({ words: 5 }),\n    timestamp: new Date(Date.now()).toUTCString(),\n    id: uuid(),\n  };\n};\n\nmodule.exports = { randomGenerator };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Header_main__3OPwk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Messages_main__tmSnh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editMessage\":\"EditMessage_editMessage__1U4Cp\"};","export const levels = ['warn', 'error', 'status'];"],"sourceRoot":""}